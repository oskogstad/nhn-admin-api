package main

import (
	"fmt"
	"log"
	"net/http"
	"os"

	_ "api.nhn.no/admin/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

// @title NHN API Admin Service
// @description Various administrative functions for the API-gateway and k8s cluster
// @version 1.0
// @host localhost:8181
// @BasePath /admin/
func main() {
	if !EnsureGitEnvFound() {
		os.Exit(1)
	}

	router := mux.NewRouter()
	router.StrictSlash(true)

	router.NotFoundHandler = http.HandlerFunc(NotFound)

	router.HandleFunc("/", SwaggerRedirect)
	router.HandleFunc("/admin/api/new", NewAPIRegistration).Methods("POST")
	router.HandleFunc("/admin/", SwaggerRedirect).Methods("GET")
	router.HandleFunc("/admin/docs/", SwaggerRedirect).Methods("GET")
	router.PathPrefix("/admin/docs").Handler(httpSwagger.WrapHandler).Methods("GET")

	var portNumber = 8181
	fmt.Printf("Starting http listener on port %d ...\n", portNumber)
	log.Fatal(http.ListenAndServe(fmt.Sprintf(":%d", portNumber), router))
}

// SwaggerRedirect redirects HTTP request to Swagger docs
func SwaggerRedirect(w http.ResponseWriter, r *http.Request) {
	http.Redirect(w, r, "/admin/docs/index.html", http.StatusPermanentRedirect)
}

// NotFound ...
func NotFound(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(http.StatusNotFound)
	fmt.Fprint(w, "<html>404 not found ðŸ™ˆ <br /><a href=\"/admin/docs/index.html\">API docs</a> ðŸ“œ</html>")
}

// CheckIfError should be used to naively panics if an error is not nil.
func CheckIfError(err error) {
	if err == nil {
		return
	}

	fmt.Printf("\x1b[31;1m%s\x1b[0m\n", fmt.Sprintf("error: %s", err))
	os.Exit(1)
}
